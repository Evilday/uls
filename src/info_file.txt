int num_of_files = 0;
struct dirent *d;
struct stat buff;
char **all_elems;
DIR *f;
f = opendir(info->argv[1]);
d = readdir(f);

while ((d = readdir(f)))
	num_of_files++;

closedir(f);
f = opendir(info->argv[1]);

all_elems = (char **)malloc(sizeof(char *) * (num_of_files + 1));
d = readdir(f);

for (int i = 0; i < num_of_files; i++, (d = readdir(f)))
	all_elems[i] = mx_strdup(d->d_name);

all_elems[num_of_files] = NULL;

for (int i = 0; all_elems[i]; i++)
	printf("%s\n", all_elems[i]);

mx_sort_str(all_elems);

for (int i = 0; all_elems[i]; i++) {
	if (all_elems[i][0] != '.') {
		stat(all_elems[i], &buff);
		printf("%llu\t", buff.st_ino);
		printf("%hu\t", buff.st_mode);
		printf("%hu\t", buff.st_nlink);
		printf("%u\t", buff.st_uid);
		printf("%u\t", buff.st_gid);
		printf("%d\t", buff.st_rdev);
		printf("%lld\t", buff.st_size);
		printf("%d\t", buff.st_blksize);
		printf("%lld\t", buff.st_blocks);
		printf("%ld\t", buff.st_atime);
		printf("%ld\t", buff.st_mtime);
		printf("%ld\t", buff.st_ctime);
		printf("%s\n", all_elems[i]);
	}
}
closedir(f




stat - Функция stat() вносит в структуру, на которую указывает statbuf,
информацию, содержащуюся в файле, связанном с указателем filename. Структура stat определена в sys\stat.h.

-rw-r--r--  1                                   vkmetyk  4242                                   8                               Nov 22 17:13                 		  test.txt
			num of hard links to this file               ID of the group owner of the file      num of symbols (bytes) inside   last time modified           file name
			buff.st_nlink                                buff.st_gid                            buff.st_size                    buff.st_mtime                readdir(opendir("pos (default ".")"))

коли в аргументи потрапляє перший агрумент, що не є флагом, то більше флаги не потрібно відшукувати

char *time_info = mx_strndup(((ctime)(&buff.st_mtime) + 4), 12);
	printf("Time:%s\n", time_info);
	free(time_info);

// print permissions

struct stat fileStat;

for (int i = 0; stat(info->argv[i], &fileStat) >= 0; i++) {
	printf("File Permissions : \t");
	printf( (S_ISDIR(fileStat.st_mode)) ? "d" : "-");
	printf( (fileStat.st_mode & S_IRUSR) ? "r" : "-");
	printf( (fileStat.st_mode & S_IWUSR) ? "w" : "-");
	printf( (fileStat.st_mode & S_IXUSR) ? "x" : "-");
	printf( (fileStat.st_mode & S_IRGRP) ? "r" : "-");
	printf( (fileStat.st_mode & S_IWGRP) ? "w" : "-");
	printf( (fileStat.st_mode & S_IXGRP) ? "x" : "-");
	printf( (fileStat.st_mode & S_IROTH) ? "r" : "-");
	printf( (fileStat.st_mode & S_IWOTH) ? "w" : "-");
	printf( (fileStat.st_mode & S_IXOTH) ? "x" : "-");
	printf("\n");
}
<-------------------------->
/uls -SluTRaA1ruSl ../../  0.82s user 0.42s system 56% cpu 2.209 total
ls -SluTRaA1ruSl ../../  0.63s user 0.34s system 62% cpu 1.541 total
<-------------------------->
Infinity loop = ../../..//.brew/Library/Taps/homebrew/homebrew-core/Formula:

lrwxr-xr-x    1 vkmetyk  4242    34 Oct 31 17:57:53 2019 iwyu -> ../Formula/include-what-you-use.rb
lrwxr-xr-x    1 vkmetyk  4242    34 Oct 31 17:57:53 2019 awsebcli -> ../Formula/aws-elasticbeanstalk.rb
lrwxr-xr-x    1 vkmetyk  4242    35 Oct 31 17:57:53 2019 pt -> ../Formula/the_platinum_searcher.rb
lrwxr-xr-x    1 vkmetyk  4242    38 Oct 31 17:57:53 2019 sem -> ../Formula/schema-evolution-manager.rb
drwxr-xr-x   12 vkmetyk  4242   408 Dec 19 15:52:47 2019 ..
drwxr-xr-x  224 vkmetyk  4242  7616 Dec 19 15:52:47 2019 .

ls -SluTRaA1ruSl ../../../  7.30s user 3.90s system 46% cpu 23.905 total


../../..//Library/Application Support/Slack
<-------------------------->

ioctl - функція поверає розмір вікна в байтах
кількість стовбців визначається довжиною найдовшого слова зі списку + 1

All flags we need:

l (+) = обширна інформація про файл
a (+) = виводити також всі приховані файли
A (+) = виводити також всі приховані файли окрім (. та ..), тобто окрім посилання на теперішній та попередній каталог
R (+) = вивести всі файли/папки рекурсивно (у папці, а також у всіх підпапках)
G (+-) = робить кольорове оформлення для назв елементів (якщо використовується -R, то цей флаг перестає діяти)
h (+) = (не точно) при використанні з флагом -l у полі розмір вказує розмір у найбільшому якому воно може дорівнювати (1530 байтів буде позначатися, як 1K, а 120 байтів 120B і тд.)
@ (-) = (не точно) при використанні з флагом -l під даними про елемент у новій строці виводить також...
e (-) = при використанні з флагом -l під даними про елемент у новій строці виводить також інформацію про acl, якщо вони є
T (+) = при використанні з флагом -l у полі time, час буде прописано більш точно (Dec 13 13:31:49 2019 замість Dec 13 13:31)
1 (+) = кожен елемент каталога виводиться у новому рядку
C (+) = стандартний вивід
r (+) = (rotate) всі елементи каталогу виводяться з кінця на початок
t (+) = при використанні з флагом -l сортування елементів відбувається по полі time
u (+) = (used) при використанні з флагом -l у поле заноситиметься не st_mtime, а st_atime
c (+) = (created) при використанні з флагом -l у поле заноситиметься не st_mtime, а st_ctime
S (+) = (size) при використанні з флагом -l сортування елементів по полі st_size

f (+) =
F (+) =
m (+) = виводить елементи через кому (file1, folder1, file2...)
p (+) =